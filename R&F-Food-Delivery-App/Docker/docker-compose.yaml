services:
  db:
    image: postgres:14
    restart: always
    container_name: postgres_db
    shm_size: 128mb
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: fds
    volumes:
      - docker_db_data:/var/lib/postgresql/data
    networks:
      - starcozka-app-network

  backend:
    build:
      context: ../backend-lmi3
      dockerfile: Dockerfile
    container_name: backend_container
    restart: always
    env_file:
      - ../.env
    depends_on:
      - db
    volumes:
      - backend_uploads:/app/public/uploads
    networks:
      - starcozka-app-network
    labels:
      - "traefik.enable=true"
      # API routes with /api prefix for domain (HTTPS)
      - "traefik.http.routers.backend-api-secure.rule=Host(`rudyetfanny.be`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-api-secure.entrypoints=websecure"
      - "traefik.http.routers.backend-api-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.backend-api-secure.service=backend"
      - "traefik.http.routers.backend-api-secure.middlewares=api-stripprefix,cors"
      - "traefik.http.routers.backend-api-secure.priority=3"
      # WebSocket routes for domain (HTTPS)
      - "traefik.http.routers.backend-ws-secure.rule=Host(`rudyetfanny.be`) && PathPrefix(`/socket.io`)"
      - "traefik.http.routers.backend-ws-secure.entrypoints=websecure"
      - "traefik.http.routers.backend-ws-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.backend-ws-secure.service=backend"
      - "traefik.http.routers.backend-ws-secure.middlewares=cors"
      - "traefik.http.routers.backend-ws-secure.priority=3"
      # API routes for IP (HTTP) - no redirect
      - "traefik.http.routers.backend-api-ip.rule=Host(`168.231.81.212`) && PathPrefix(`/api`)"
      - "traefik.http.routers.backend-api-ip.entrypoints=web"
      - "traefik.http.routers.backend-api-ip.service=backend"
      - "traefik.http.routers.backend-api-ip.middlewares=api-stripprefix,cors"
      - "traefik.http.routers.backend-api-ip.priority=3"
      # Service configuration
      - "traefik.http.services.backend.loadbalancer.server.port=3001"
      # Fix stripprefix middleware
      - "traefik.http.middlewares.api-stripprefix.stripprefix.prefixes=/api"
      # Direct routes for uploads (HTTPS)
      - "traefik.http.routers.backend-uploads-secure.rule=Host(`rudyetfanny.be`) && PathPrefix(`/uploads`)"
      - "traefik.http.routers.backend-uploads-secure.entrypoints=websecure"
      - "traefik.http.routers.backend-uploads-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.backend-uploads-secure.service=backend"
      - "traefik.http.routers.backend-uploads-secure.middlewares=cors"
      - "traefik.http.routers.backend-uploads-secure.priority=4"
      # Direct routes for uploads (HTTP for IP)
      - "traefik.http.routers.backend-uploads-ip.rule=Host(`82.25.118.116`) && PathPrefix(`/uploads`)"
      - "traefik.http.routers.backend-uploads-ip.entrypoints=web"
      - "traefik.http.routers.backend-uploads-ip.service=backend"
      - "traefik.http.routers.backend-uploads-ip.middlewares=cors"
      - "traefik.http.routers.backend-uploads-ip.priority=4"
      # Enhanced CORS headers
      - "traefik.http.middlewares.cors.headers.accesscontrolallowmethods=GET,OPTIONS,PUT,POST,DELETE,PATCH"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowheaders=*"
      - "traefik.http.middlewares.cors.headers.accesscontrolalloworiginlist=https://rudyetfanny.be,http://82.25.118.116,http://localhost:3000"
      - "traefik.http.middlewares.cors.headers.accesscontrolallowcredentials=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolmaxage=86400"
      - "traefik.http.middlewares.cors.headers.addvaryheader=true"
      - "traefik.http.middlewares.cors.headers.accesscontrolexposeheaders=*"

  frontend:
    build:
      context: ../lmi3
      dockerfile: Dockerfile
    container_name: frontend_container
    restart: always
    env_file:
      - ../.env
    environment:
      - NODE_OPTIONS=--openssl-legacy-provider
    depends_on:
      - backend
    networks:
      - starcozka-app-network
    labels:
      - "traefik.enable=true"
      # Frontend for domain (HTTPS)
      - "traefik.http.routers.frontend-secure.rule=Host(`rudyetfanny.be`)"
      - "traefik.http.routers.frontend-secure.entrypoints=websecure"
      - "traefik.http.routers.frontend-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.frontend-secure.service=frontend"
      - "traefik.http.routers.frontend-secure.priority=1"
      # Add security headers
      - "traefik.http.routers.frontend-secure.middlewares=security-headers"
      - "traefik.http.middlewares.security-headers.headers.stsSeconds=315360000"
      - "traefik.http.middlewares.security-headers.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.security-headers.headers.stsPreload=true"
      - "traefik.http.middlewares.security-headers.headers.forceSTSHeader=true"
      - "traefik.http.middlewares.security-headers.headers.customResponseHeaders.Content-Security-Policy=upgrade-insecure-requests"
      # Frontend for IP (HTTP with redirect)
      - "traefik.http.routers.frontend-ip.rule=Host(`82.25.118.116`)"
      - "traefik.http.routers.frontend-ip.entrypoints=web"
      - "traefik.http.routers.frontend-ip.service=frontend"
      - "traefik.http.routers.frontend-ip.priority=1"
      # Service configuration
      - "traefik.http.services.frontend.loadbalancer.server.port=3000"

  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    restart: always
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: "False"
    ports:
      - "5050:80"
    networks:
      - starcozka-app-network
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      # PgAdmin for domain (HTTPS)
      - "traefik.http.routers.pgadmin-secure.rule=Host(`rudyetfanny.be`) && PathPrefix(`/pgadmin`)"
      - "traefik.http.routers.pgadmin-secure.entrypoints=websecure"
      - "traefik.http.routers.pgadmin-secure.tls.certresolver=myresolver"
      - "traefik.http.routers.pgadmin-secure.service=pgadmin"
      - "traefik.http.routers.pgadmin-secure.middlewares=pgadmin-stripprefix"
      - "traefik.http.routers.pgadmin-secure.priority=2"
      # PgAdmin for IP (HTTP)
      - "traefik.http.routers.pgadmin-ip.rule=Host(`82.25.118.116`) && PathPrefix(`/pgadmin`)"
      - "traefik.http.routers.pgadmin-ip.entrypoints=web"
      - "traefik.http.routers.pgadmin-ip.service=pgadmin"
      - "traefik.http.routers.pgadmin-ip.middlewares=pgadmin-stripprefix"
      - "traefik.http.routers.pgadmin-ip.priority=2"
      # PgAdmin for localhost (HTTP)
      - "traefik.http.routers.pgadmin-local.rule=Host(`localhost`) && PathPrefix(`/pgadmin`)"
      - "traefik.http.routers.pgadmin-local.entrypoints=web"
      - "traefik.http.routers.pgadmin-local.service=pgadmin"
      - "traefik.http.routers.pgadmin-local.middlewares=pgadmin-stripprefix"
      - "traefik.http.routers.pgadmin-local.priority=2"
      # Service and middleware configuration
      - "traefik.http.middlewares.pgadmin-stripprefix.stripprefix.prefixes=/pgadmin"
      - "traefik.http.services.pgadmin.loadbalancer.server.port=80"

networks:
  starcozka-app-network:
    external: true

volumes:
  docker_db_data:
  docker_pgadmin_data:
  backend_uploads:

